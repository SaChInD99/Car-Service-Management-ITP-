<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>